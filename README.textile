
h2. License

This project is distributed under the "MIT License":http://en.wikipedia.org/wiki/MIT_license. See the "License.txt":http://recursive-design.com/code/p/rails-kitchen-sink/source/tree/master/LICENSE.txt file for details.

h2. About

We needed a solid base to build our own rails projects from. Since integrating all these disparate pieces isn't the easiest thing in the world, we decided to release this sample site in the hope that it would save you time as well.

This demo application is designed to provide a solid, generic skeleton to base your next rails project on, and includes everything you'll need to dive straight in and build your dream app.

h2. Installation

To get started, first download the source via git

{% highlight bash %}
$ git clone git://recursive-design.com/rails-kitchen-sink.git
$ cd rails-kitchen-sink
{% endhighlight %}

Next, install the requisite gems :

{% highlight bash %}
$ bundle install
{% endhighlight %}

Set up the database :

{% highlight bash %}
$ rake db:setup
{% endhighlight %}

Finally, run the local development server to try it out :

{% highlight bash %}
$ rails s
{% endhighlight %}

The demo application should now be available at "http://localhost:3000/":http://localhost:3000/.

h2. What's Included?

We've tried to create a sensible base to start build your Rails 3 applications off of, with all the packages we generally use pre-integrated. _Rails Kitchen Sink_ currently combines :

* "Devise":http://github.com/plataformatec/devise authentication.
* "CanCan":http://github.com/ryanb/cancan authorization.
* "HAML":http://haml-lang.com/ Templates.
* "CoffeeScript":http://jashkenas.github.com/coffee-script/ support.
* "metric_fu":http://metric-fu.rubyforge.org/ reports.
* Full "RSpec":http://rspec.info/ test suite.
* "Spork":http://github.com/timcharper/spork DRb server.
* "960":http://960.gs/ CSS grid system.
* "Jammit":http://documentcloud.github.com/jammit/ asset packaging.
* "Formtastic":http://github.com/justinfrench/formtastic forms.

h2. Testing

_Rails Kitchen Sink_ comes pre-configured for "Spork":http://github.com/timcharper/spork and "autotest":http://www.zenspider.com/ZSS/Products/ZenTest/#rsn support. I generally work by running _spork_ in one terminal :

{% highlight bash %}
$ cd rails-kitchen-sink
$ spork
Using RSpec
Loading Spork.prefork block...
Spork is ready and listening on 8989!
{% endhighlight %}

... and running _autotest_ in another :

{% highlight bash %}
$ cd rails-kitchen-sink
$ autotest
........................................................................................

Finished in 29.27 seconds
88 examples, 0 failures
{% endhighlight %}

Autotest will run the test suite automatically whenever you save changes, and if you're working on OSX, it will provide "Growl":http://growl.info/ feedback every time the test suite is run :

!http://recursive-design.com/images/projects/rails-kitchen-sink/autotest_growl_notification.png!

h2. Deploying To Heroku

To deploy the application to "Heroku":http://heroku.com/, simply run _heroku create_ :

{% highlight bash %}
$ heroku create
Creating evening-beach-14... done
Created http://evening-beach-14.heroku.com/ | git@heroku.com:evening-beach-14.git
Git remote heroku added
{% endhighlight %}

The _evening-beach-14_ part will vary depending on what heroku chooses for your application.

To push your newly created application to heroku, do a _git push_ :

{% highlight bash %}
$ git push heroku master
Counting objects: 1669, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (629/629), done.
Writing objects: 100% (1669/1669), 382.36 KiB, done.
Total 1669 (delta 955), reused 1657 (delta 949)

-----> Heroku receiving push
-----> Rails app detected
-----> Gemfile detected, running Bundler version 1.0.0
       Unresolved dependencies detected; Installing...
       Fetching source index for http://rubygems.org/
       
       ...
       [installing a bunch of gems]
       ...
       
       Your bundle is complete! Use `bundle show [gemname]` to see where a bundled gem is installed.
       
       Your bundle was installed to `.bundle/gems`
       Compiled slug size is 25.6MB
-----> Launching.... done
       http://evening-beach-14.heroku.com deployed to Heroku

To git@heroku.com:evening-beach-14.git
 * [new branch]      master -> master
{% endhighlight %}

Next, create the database on Heroku :

{% highlight bash %}
$ heroku rake db:setup
{% endhighlight %}

You should also install the free "SendGrid":http://sendgrid.com/ add-on for email delivery :

{% highlight bash %}
$ heroku addons:add sendgrid:free
{% endhighlight %}

Whenever you push changes to git, you can update heroku by doing _git push heroku_ again.

h2. Git hooks

h2. Internationalization

_Rails Kitchen Sink_ is fully I18N-ready, but unfortunately the only translation is currently (i assume fairly badly, being unable to read it) auto-generated-french from Google translate. If you'd like to contribute a translation, you can start by looking at the "translation files":http://recursive-design.com/code/p/rails-kitchen-sink/source/tree/master/config/locales and "static pages":http://recursive-design.com/code/p/rails-kitchen-sink/source/tree/master/app/views/pages. There's not a great deal of text to translate, so if anyone is feeling particularly generous and/or bored, additional translations would be very much appreciated! 

h2. Stylesheets

h2. Javascript

h2. Asset Packaging

h2. Bug Reports

If you come across any problems, please "create a ticket":http://recursive-design.com/code/p/rails-kitchen-sink/issues/ and we'll try to get it fixed as soon as possible.